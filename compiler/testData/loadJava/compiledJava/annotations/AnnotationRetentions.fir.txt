public open class AnnotationRetentions : R|kotlin/Any| {
    public constructor(): R|test/AnnotationRetentions|

    public abstract annotation class BaseAnnotation : R|kotlin/Annotation| {
    }

    @R|java/lang/annotation/Retention|(R|java/lang/annotation/RetentionPolicy.SOURCE|()) public abstract annotation class SourceAnnotation : R|kotlin/Annotation| {
    }

    @R|java/lang/annotation/Retention|(R|java/lang/annotation/RetentionPolicy.CLASS|()) public abstract annotation class BinaryAnnotation : R|kotlin/Annotation| {
    }

    @R|java/lang/annotation/Retention|(R|java/lang/annotation/RetentionPolicy.RUNTIME|()) public abstract annotation class RuntimeAnnotation : R|kotlin/Annotation| {
    }

    @R|test/AnnotationRetentions.BaseAnnotation|() public/*package*/ open inner class BaseClass : R|kotlin/Any| {
        public/*package*/ constructor(): R|test/AnnotationRetentions.BaseClass|

    }

    @R|test/AnnotationRetentions.SourceAnnotation|() public/*package*/ open inner class SourceClass : R|kotlin/Any| {
        public/*package*/ constructor(): R|test/AnnotationRetentions.SourceClass|

    }

    @R|test/AnnotationRetentions.BinaryAnnotation|() public/*package*/ open inner class BinaryClass : R|kotlin/Any| {
        public/*package*/ constructor(): R|test/AnnotationRetentions.BinaryClass|

    }

    @R|test/AnnotationRetentions.RuntimeAnnotation|() public/*package*/ open inner class RuntimeClass : R|kotlin/Any| {
        public/*package*/ constructor(): R|test/AnnotationRetentions.RuntimeClass|

    }

}
